/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium',
            name: 'selenium-java',
            version: '3.14.0'

    // https://mvnrepository.com/artifact/org.testng/testng
    compile group: 'org.testng',
            name: 'testng',
            version: '7.4.0'

    // https://mvnrepository.com/artifact/io.appium/java-client
    compile group: 'io.appium',
            name: 'java-client',
            version: '7.3.0'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	  compile group: 'org.apache.httpcomponents',
              name: 'httpclient',
              version: '4.5.12'

    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile group: 'com.googlecode.json-simple',
            name: 'json-simple',
            version: '1.1.1'


    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json',
            name: 'json',
            version: '20200518'

    compile group: 'com.asprise.ocr',
            name: 'java-ocr-api',
            version: '15.3.0.3'

    compile 'org.slf4j:slf4j-simple:2.0.4'

    // https://mvnrepository.com/artifact/org.jasypt/jasypt
    implementation group: 'org.jasypt', name: 'jasypt', version: '1.9.2'

    implementation 'org.tomitribe:tomitribe-http-signatures:1.8'


}


test {
    useTestNG() {

        /*Web*/
        /*Android Test*/
        /*QE Environment*/
        if (project.hasProperty('Regression_Android_QA')) {suites 'TestNG/Android/Regression_Android_Suite.xml'}
        if (project.hasProperty('Smoke_Android_QA')) {suites 'testNG/Android/Smoke_Android_Suite.xml'}

        if (project.hasProperty('Registration_Android_QA')) {suites 'TestNG/Android/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_Android_QA')) {suites 'TestNG/Android/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_Android_QA')) {suites 'TestNG/Android/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_Android_QA')) {suites 'TestNG/Android/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_Android_QA')) {suites 'TestNG/Android/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_Android_QA')) {suites 'testNG/Android/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_Android_QA')) {suites 'testNG/Android/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_Android_QA')) {suites 'testNG/Android/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_Android_QA')) {suites 'testNG/Android/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_Android_QA')) {suites 'testNG/Android/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_Android_QA')) {suites 'testNG/Android/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_Android_QA')) {suites 'testNG/Android/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_Android_QA')) {suites 'TestNG/Android/Web/Email.xml'}


        /*FATE Environment*/
        if (project.hasProperty('Regression_Android_FATE')) {suites 'TestNG/Android/Regression_Android_Suite.xml'}
        if (project.hasProperty('Smoke_Android_FATE')) {suites 'testNG/Android/Smoke_Android_Suite.xml'}

        if (project.hasProperty('Registration_Android_FATE')) {suites 'TestNG/Android/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_Android_FATE')) {suites 'TestNG/Android/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_Android_FATE')) {suites 'TestNG/Android/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_Android_FATE')) {suites 'TestNG/Android/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_Android_FATE')) {suites 'TestNG/Android/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_Android_FATE')) {suites 'testNG/Android/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_Android_FATE')) {suites 'testNG/Android/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_Android_FATE')) {suites 'testNG/Android/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_Android_FATE')) {suites 'testNG/Android/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_Android_FATE')) {suites 'testNG/Android/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_Android_FATE')) {suites 'testNG/Android/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_Android_FATE')) {suites 'testNG/Android/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_Android_FATE')) {suites 'TestNG/Android/Web/Email.xml'}

        /*UAT Environment*/
        if (project.hasProperty('Regression_Android_UAT')) {suites 'TestNG/Android/Regression_Android_Suite.xml'}
        if (project.hasProperty('Smoke_Android_UAT')) {suites 'testNG/Android/Smoke_Android_Suite.xml'}

        if (project.hasProperty('Registration_Android_UAT')) {suites 'TestNG/Android/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_Android_UAT')) {suites 'TestNG/Android/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_Android_UAT')) {suites 'TestNG/Android/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_Android_UAT')) {suites 'TestNG/Android/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_Android_UAT')) {suites 'TestNG/Android/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_Android_UAT')) {suites 'testNG/Android/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_Android_UAT')) {suites 'testNG/Android/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_Android_UAT')) {suites 'testNG/Android/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_Android_UAT')) {suites 'testNG/Android/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_Android_UAT')) {suites 'testNG/Android/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_Android_UAT')) {suites 'testNG/Android/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_Android_UAT')) {suites 'testNG/Android/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_Android_UAT')) {suites 'TestNG/Android/Web/Email.xml'}

        /*iOS Test*/
        /*QE Environment*/
        if (project.hasProperty('Regression_iOS_QA')) {suites 'TestNG/iOS/Regression_iOS_Suite.xml'}
        if (project.hasProperty('Smoke_iOS_QA')) {suites 'testNG/iOS/Smoke_iOS_Suite.xml'}

        if (project.hasProperty('Registration_iOS_QA')) {suites 'TestNG/iOS/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_iOS_QA')) {suites 'TestNG/iOS/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_iOS_QA')) {suites 'TestNG/iOS/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_iOS_QA')) {suites 'TestNG/iOS/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_iOS_QA')) {suites 'TestNG/iOS/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_iOS_QA')) {suites 'testNG/iOS/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_iOS_QA')) {suites 'testNG/iOS/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_iOS_QA')) {suites 'testNG/iOS/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_iOS_QA')) {suites 'testNG/iOS/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_iOS_QA')) {suites 'testNG/iOS/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_iOS_QA')) {suites 'testNG/iOS/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_iOS_QA')) {suites 'testNG/iOS/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_iOS_QA')) {suites 'TestNG/iOS/Web/Email.xml'}


        /*Dev Environment*/
        if (project.hasProperty('Regression_iOS_FATE')) {suites 'TestNG/iOS/Regression_iOS_Suite.xml'}
        if (project.hasProperty('Smoke_iOS_FATE')) {suites 'testNG/iOS/Smoke_iOS_Suite.xml'}

        if (project.hasProperty('Registration_iOS_FATE')) {suites 'TestNG/iOS/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_iOS_FATE')) {suites 'TestNG/iOS/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_iOS_FATE')) {suites 'TestNG/iOS/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_iOS_FATE')) {suites 'TestNG/iOS/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_iOS_FATE')) {suites 'TestNG/iOS/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_iOS_FATE')) {suites 'testNG/iOS/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_iOS_FATE')) {suites 'testNG/iOS/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_iOS_Fate')) {suites 'testNG/iOS/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_iOS_FATE')) {suites 'testNG/iOS/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_iOS_FATE')) {suites 'testNG/iOS/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_iOS_FATE')) {suites 'testNG/iOS/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_iOS_FATE')) {suites 'testNG/iOS/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_iOS_FATE')) {suites 'TestNG/iOS/Web/Email.xml'}


        /*SIT Environment*/
        if (project.hasProperty('Regression_iOS_UAT')) {suites 'TestNG/iOS/Regression_iOS_Suite.xml'}
        if (project.hasProperty('Smoke_iOS_UAT')) {suites 'testNG/iOS/Smoke_iOS_Suite.xml'}

        if (project.hasProperty('Registration_iOS_UAT')) {suites 'TestNG/iOS/Web/Registration.xml'}
        if (project.hasProperty('Sign_In_iOS_UAT')) {suites 'TestNG/iOS/Web/Sign_In.xml'}
        if (project.hasProperty('Request_Password_iOS_UAT')) {suites 'TestNG/iOS/Web/Request_Password.xml'}
        if (project.hasProperty('Account_Lock_iOS_UAT')) {suites 'TestNG/iOS/Web/Account_Lock.xml'}
        if (project.hasProperty('Reset_Password_iOS_UAT')) {suites 'TestNG/iOS/Web/Reset_Password.xml'}
        if (project.hasProperty('Menu_iOS_UAT')) {suites 'testNG/iOS/Web/Menu.xml'}
        if (project.hasProperty('Log_Out_iOS_UAT')) {suites 'testNG/iOS/Web/Log_Out.xml'}
        if (project.hasProperty('Profile_Settings_iOS_UAT')) {suites 'testNG/iOS/Web/Profile_Settings.xml'}
        if (project.hasProperty('Privacy_Settings_iOS_UAT')) {suites 'testNG/iOS/Web/Privacy_Settings.xml'}
        if (project.hasProperty('Privacy_Policy_iOS_UAT')) {suites 'testNG/iOS/Web/Privacy_Policy.xml'}
        if (project.hasProperty('Tasks_iOS_UAT')) {suites 'testNG/iOS/Web/Tasks.xml'}
        if (project.hasProperty('Session_Activity_iOS_UAT')) {suites 'testNG/iOS/Web/Session_Activity.xml'}

        if (project.hasProperty('Email_iOS_UAT')) {suites 'TestNG/iOS/Web/Email.xml'}



        useDefaultListeners = true
    }
    reports.html.enabled = false
    testLogging.showStandardStreams = true
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }

    ignoreFailures true
}

sourceSets {
  test {
    java.srcDirs += "${buildDir}/generated/source/buildConfig"
  }
}

task generateConfig() {
  doLast() {

      // Delete all generated sources as some depend on this code
      // and we cannot change their dependencies.
//    file("${buildDir}/generated").deleteDir()



//    QA
//    Android
//    Test Sets
      if (
                      project.hasProperty('Registration_Android_QA') ||
                      project.hasProperty('Sign_In_Android_QA') ||
                      project.hasProperty('Request_Password_Android_QA') ||
                      project.hasProperty('Account_Lock_Android_QA') ||
                      project.hasProperty('Reset_Password_Android_QA') ||
                      project.hasProperty('Menu_Android_QA') ||
                      project.hasProperty('Log_Out_Android_QA') ||
                      project.hasProperty('Profile_Settings_Android_QA') ||
                      project.hasProperty('Privacy_Settings_Android_QA') ||
                      project.hasProperty('Privacy_Policy_Android_QA') ||
                      project.hasProperty('Tasks_Android_QA') ||
                      project.hasProperty('Session_Activity_Android_QA')
      ) {
          tasks.withType(Test) {
                     systemProperty "env", "QA"
                     systemProperty "testRun", "null"
                     systemProperty "platformParameter", "Android"
          }
// Smoke Test Plan - QA
      } else if (
                    project.hasProperty('Smoke_Android_QA')
      ) {
          tasks.withType(Test) {
                    systemProperty "env", "QA"
                    systemProperty "testRun", "smoke"
                    systemProperty "platformParameter", "Android"
          }
//   Regression Test Plan - QA
      } else if (
                    project.hasProperty('Regression_Android_QA')
      ) {
          tasks.withType(Test) {
                      systemProperty "env", "QA"
                      systemProperty "testRun", "regression"
                      systemProperty "platformParameter", "Android"
          }

//    QA
//    iOS
//    Test Sets
      } else if (
                      project.hasProperty('Registration_iOS_QA') ||
                      project.hasProperty('Sign_In_iOS_QA') ||
                      project.hasProperty('Request_Password_iOS_QA') ||
                      project.hasProperty('Account_Lock_iOS_QA') ||
                      project.hasProperty('Reset_Password_iOS_QA') ||
                      project.hasProperty('Menu_iOS_QA') ||
                      project.hasProperty('Log_Out_iOS_QA') ||
                      project.hasProperty('Profile_Settings_iOS_QA') ||
                      project.hasProperty('Privacy_Settings_iOS_QA') ||
                      project.hasProperty('Privacy_Policy_iOS_QA') ||
                      project.hasProperty('Tasks_iOS_QA') ||
                      project.hasProperty('Session_Activity_iOS_QA')
      ) {
          tasks.withType(Test) {
                      systemProperty "env", "QA"
                      systemProperty "testRun", "null"
                      systemProperty "platformParameter", "iOS"
          }

// Smoke Test Plan - QA
      } else if (
                     project.hasProperty('Smoke_iOS_QA')
      ) {
          tasks.withType(Test) {
                      systemProperty "env", "QA"
                      systemProperty "testRun", "smoke"
                      systemProperty "platformParameter", "iOS"
          }

//   Regression Test Plan - QA
      } else if (
                     project.hasProperty('Regression_iOS_QA')
        ) {
            tasks.withType(Test) {
                      systemProperty "env", "QA"
                      systemProperty "testRun", "regression"
                      systemProperty "platformParameter", "iOS"
            }





//    FATE
//    Test Sets
//     Android
    }else if(
            project.hasProperty('Registration_Android_FATE') ||
            project.hasProperty('Sign_In_Android_FATE') ||
            project.hasProperty('Request_Password_Android_FATE') ||
            project.hasProperty('Account_Lock_Android_FATE') ||
            project.hasProperty('Reset_Password_Android_FATE') ||
            project.hasProperty('Menu_Android_FATE') ||
            project.hasProperty('Log_Out_Android_FATE') ||
            project.hasProperty('Profile_Settings_Android_FATE') ||
            project.hasProperty('Privacy_Settings_Android_FATE') ||
            project.hasProperty('Privacy_Policy_Android_FATE') ||
            project.hasProperty('Tasks_Android_FATE') ||
            project.hasProperty('Session_Activity_Android_FATE')
    ){
          tasks.withType(Test) {
              systemProperty "env", "FATE"
              systemProperty "testRun", "null"
              systemProperty "platformParameter", "Android"
          }
// Smoke Test Plan - FATE
      } else if (
              project.hasProperty('Smoke_Android_FATE')
      ) {
          tasks.withType(Test) {
              systemProperty "env", "FATE"
              systemProperty "testRun", "smoke"
              systemProperty "platformParameter", "Android"
          }
//   Regression Test Plan - FATE
      } else if (
              project.hasProperty('Regression_Android_FATE')
      ) {
          tasks.withType(Test) {
              systemProperty "env", "FATE"
              systemProperty "testRun", "regression"
              systemProperty "platformParameter", "Android"
          }


//    FATE
//    Test Sets
//     iOS
      }else if(
                      project.hasProperty('Registration_iOS_FATE') ||
                      project.hasProperty('Sign_In_iOS_FATE') ||
                      project.hasProperty('Request_Password_iOS_FATE') ||
                      project.hasProperty('Account_Lock_iOS_FATE') ||
                      project.hasProperty('Reset_Password_iOS_FATE') ||
                      project.hasProperty('Menu_iOS_FATE') ||
                      project.hasProperty('Log_Out_iOS_FATE') ||
                      project.hasProperty('Profile_Settings_iOS_FATE') ||
                      project.hasProperty('Privacy_Settings_iOS_FATE') ||
                      project.hasProperty('Privacy_Policy_iOS_FATE') ||
                      project.hasProperty('Tasks_iOS_FATE') ||
                      project.hasProperty('Session_Activity_iOS_FATE')
      ){
          tasks.withType(Test) {
                    systemProperty "env", "FATE"
                    systemProperty "testRun", "null"
                    systemProperty "platformParameter", "iOS"
          }
// Smoke Test Plan - FATE
      } else if (
                    project.hasProperty('Smoke_iOS_FATE')
      ) {
          tasks.withType(Test) {
                    systemProperty "env", "FATE"
                    systemProperty "testRun", "smoke"
                    systemProperty "platformParameter", "iOS"
          }
//   Regression Test Plan - FATE
      } else if (
                    project.hasProperty('Regression_iOS_FATE')
      ) {
          tasks.withType(Test) {
                    systemProperty "env", "FATE"
                    systemProperty "testRun", "regression"
                    systemProperty "platformParameter", "iOS"
          }



//    UAT
//    Test Sets
//    Android
    }else if(
            project.hasProperty('Registration_Android_UAT') ||
            project.hasProperty('Sign_In_Android_UAT') ||
            project.hasProperty('Request_Password_Android_UAT') ||
            project.hasProperty('Account_Lock_Android_UAT') ||
            project.hasProperty('Reset_Password_Android_UAT') ||
            project.hasProperty('Menu_Android_UAT') ||
            project.hasProperty('Log_Out_Android_UAT') ||
            project.hasProperty('Profile_Settings_Android_UAT') ||
            project.hasProperty('Privacy_Settings_Android_UAT') ||
            project.hasProperty('Privacy_Policy_Android_UAT') ||
            project.hasProperty('Tasks_Android_UAT') ||
            project.hasProperty('Session_Activity_Android_UAT')
    ){
          tasks.withType(Test) {
              systemProperty "env", "UAT"
              systemProperty "testRun", "null"
              systemProperty "platformParameter", "Android"
          }
// Smoke Test Plan - FATE
      } else if (
              project.hasProperty('Smoke_Android_UAT')
      ) {
          tasks.withType(Test) {
              systemProperty "env", "UAT"
              systemProperty "testRun", "smoke"
              systemProperty "platformParameter", "Android"
          }
//   Regression Test Plan - FATE
      } else if (
              project.hasProperty('Regression_Android_UAT')
      ) {
          tasks.withType(Test) {
              systemProperty "env", "UAT"
              systemProperty "testRun", "regression"
              systemProperty "platformParameter", "Android"
          }

//    UAT
//    Test Sets
//    iOS
  }else if(
                    project.hasProperty('Registration_iOS_UAT') ||
                    project.hasProperty('Sign_In_iOS_UAT') ||
                    project.hasProperty('Request_Password_iOS_UAT') ||
                    project.hasProperty('Account_Lock_iOS_UAT') ||
                    project.hasProperty('Reset_Password_iOS_UAT') ||
                    project.hasProperty('Menu_iOS_UAT') ||
                    project.hasProperty('Log_Out_iOS_UAT') ||
                    project.hasProperty('Profile_Settings_iOS_UAT') ||
                    project.hasProperty('Privacy_Settings_iOS_UAT') ||
                    project.hasProperty('Privacy_Policy_iOS_UAT') ||
                    project.hasProperty('Tasks_iOS_UAT') ||
                    project.hasProperty('Session_Activity_iOS_UAT')
    ){
          tasks.withType(Test) {
                    systemProperty "env", "UAT"
                    systemProperty "testRun", "null"
                    systemProperty "platformParameter", "iOS"
          }
// Smoke Test Plan - UAT
  } else if (
                     project.hasProperty('Smoke_iOS_UAT')
    ) {
        tasks.withType(Test) {
                     systemProperty "env", "UAT"
                     systemProperty "testRun", "smoke"
                     systemProperty "platformParameter", "iOS"
        }
//   Regression Test Plan - UAT
    } else if (
                     project.hasProperty('Regression_iOS_UAT')
    ) {
          tasks.withType(Test) {
                    systemProperty "env", "UAT"
                    systemProperty "testRun", "regression"
                    systemProperty "platformParameter", "iOS"
          }
      }


//    def target = project.hasProperty("target") ? project.getProperty("target") : targetEnvironment
    def config = new groovy.json.JsonSlurper().parseText(file("./config/settings.json").text)
    def path = "${buildDir}/generated/source/buildConfig/ch/clx/testing/appium/runner/Config.java"
    def out = file(path)
    out.parentFile.mkdirs()
    out.write("""
package ch.clx.testing.appium.runner;

public class Config {
  public static class qa {

  public static class Android {
    public static final String PackageId = "${config.qa.Android.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("AndroidSauceLabsId") ? project.getProperty("AndroidSauceLabsId") : config.qa.Android.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("AndroidSauceLabsName") ? project.getProperty("AndroidSauceLabsName") : config.qa.Android.SauceLabsName}";
    public static final String OSVersion = "${config.qa.Android.OSVersion}";
    
    public static final class Clinical {
    public static final String Username = "${config.qa.Android.Clinical.Username}";
    public static final String Password = "${config.qa.Android.Clinical.Password}";
    public static final String FirstName = "${config.qa.Android.Clinical.FirstName}";
    public static final String MiddleName = "${config.qa.Android.Clinical.MiddleName}";
    public static final String LastName = "${config.qa.Android.Clinical.LastName}";
    }
    
    public static final class Participant {
    public static final String Username = "${config.qa.Android.Participant.Username}";
    public static final String Password = "${config.qa.Android.Participant.Password}";
    public static final String FirstName = "${config.qa.Android.Participant.FirstName}";
    public static final String MiddleName = "${config.qa.Android.Participant.MiddleName}";
    public static final String LastName = "${config.qa.Android.Participant.LastName}";
    }
  }

  public static class iOS {
    public static final String PackageId = "${config.qa.iOS.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("iOSSauceLabsId") ? project.getProperty("iOSSauceLabsId") : config.qa.iOS.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("iOSSauceLabsName") ? project.getProperty("iOSSauceLabsName") : config.qa.iOS.SauceLabsName}";
    public static final String OSVersionRealDevice = "${config.qa.iOS.OSVersionRealDevice}";
    public static final String OSVersionSimulator = "${config.qa.iOS.OSVersionSimulator}";

  public static final class Clinical {
    public static final String Username = "${config.qa.iOS.Clinical.Username}";
    public static final String Password = "${config.qa.iOS.Clinical.Password}";
   public static final String FirstName = "${config.qa.iOS.Clinical.FirstName}";
    public static final String MiddleName = "${config.qa.iOS.Clinical.MiddleName}";
    public static final String LastName = "${config.qa.iOS.Clinical.LastName}";
  }

  public static final class Participant {
    public static final String Username = "${config.qa.iOS.Participant.Username}";
    public static final String Password = "${config.qa.iOS.Participant.Password}";
    public static final String FirstName = "${config.qa.iOS.Participant.FirstName}";
    public static final String MiddleName = "${config.qa.iOS.Participant.MiddleName}";
    public static final String LastName = "${config.qa.iOS.Participant.LastName}";
  }
}

  public static class App {
    public static final String Url = "${config.qa.App.Url}";
  }
}

public static class fate {

  public static class Android {
    public static final String PackageId = "${config.fate.Android.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("AndroidSauceLabsId") ? project.getProperty("AndroidSauceLabsId") : config.fate.Android.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("AndroidSauceLabsName") ? project.getProperty("AndroidSauceLabsName") : config.fate.Android.SauceLabsName}";
    public static final String OSVersion = "${config.fate.Android.OSVersion}";
    
    public static final class Clinical {
    public static final String Username = "${config.fate.Android.Clinical.Username}";
    public static final String Password = "${config.fate.Android.Clinical.Password}";
    public static final String FirstName = "${config.fate.Android.Clinical.FirstName}";
    public static final String MiddleName = "${config.fate.Android.Clinical.MiddleName}";
    public static final String LastName = "${config.fate.Android.Clinical.LastName}";
    }
    
    public static final class Participant {
    public static final String Username = "${config.fate.Android.Participant.Username}";
    public static final String Password = "${config.fate.Android.Participant.Password}";
    public static final String FirstName = "${config.fate.Android.Participant.FirstName}";
    public static final String MiddleName = "${config.fate.Android.Participant.MiddleName}";
    public static final String LastName = "${config.fate.Android.Participant.LastName}";
    }
  }

  public static class iOS {
    public static final String PackageId = "${config.fate.iOS.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("iOSSauceLabsId") ? project.getProperty("iOSSauceLabsId") : config.fate.iOS.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("iOSSauceLabsName") ? project.getProperty("iOSSauceLabsName") : config.fate.iOS.SauceLabsName}";
    public static final String OSVersionRealDevice = "${config.fate.iOS.OSVersionRealDevice}";
    public static final String OSVersionSimulator = "${config.fate.iOS.OSVersionSimulator}";

  public static final class Clinical {
    public static final String Username = "${config.fate.iOS.Clinical.Username}";
    public static final String Password = "${config.fate.iOS.Clinical.Password}";
    public static final String FirstName = "${config.fate.iOS.Clinical.FirstName}";
    public static final String MiddleName = "${config.fate.iOS.Clinical.MiddleName}";
    public static final String LastName = "${config.fate.iOS.Clinical.LastName}";
  }

  public static final class Participant {
    public static final String Username = "${config.fate.iOS.Participant.Username}";
    public static final String Password = "${config.fate.iOS.Participant.Password}";
    public static final String FirstName = "${config.fate.iOS.Participant.FirstName}";
    public static final String MiddleName = "${config.fate.iOS.Participant.MiddleName}";
    public static final String LastName = "${config.fate.iOS.Participant.LastName}";
  }
}

  public static class App {
    public static final String Url = "${config.fate.App.Url}";
  }
}
  
  public static class uat {

  public static class Android {
    public static final String PackageId = "${config.uat.Android.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("AndroidSauceLabsId") ? project.getProperty("AndroidSauceLabsId") : config.uat.Android.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("AndroidSauceLabsName") ? project.getProperty("AndroidSauceLabsName") : config.uat.Android.SauceLabsName}";
    public static final String OSVersion = "${config.uat.Android.OSVersion}";
    
    public static final class Clinical {
    public static final String Username = "${config.uat.Android.Clinical.Username}";
    public static final String Password = "${config.uat.Android.Clinical.Password}";
    public static final String FirstName = "${config.uat.Android.Clinical.FirstName}";
    public static final String MiddleName = "${config.uat.Android.Clinical.MiddleName}";
    public static final String LastName = "${config.uat.Android.Clinical.LastName}";
    }
    
    public static final class Participant {
    public static final String Username = "${config.uat.Android.Participant.Username}";
    public static final String Password = "${config.uat.Android.Participant.Password}";
    public static final String FirstName = "${config.uat.Android.Participant.FirstName}";
    public static final String MiddleName = "${config.uat.Android.Participant.MiddleName}";
    public static final String LastName = "${config.uat.Android.Participant.LastName}";
    }
  }

  public static class iOS {
    public static final String PackageId = "${config.uat.iOS.PackageId}";
    public static final String SauceLabsId = "${project.hasProperty("iOSSauceLabsId") ? project.getProperty("iOSSauceLabsId") : config.uat.iOS.SauceLabsId}";
    public static final String SauceLabsName = "${project.hasProperty("iOSSauceLabsName") ? project.getProperty("iOSSauceLabsName") : config.uat.iOS.SauceLabsName}";
    public static final String OSVersionRealDevice = "${config.uat.iOS.OSVersionRealDevice}";
    public static final String OSVersionSimulator = "${config.uat.iOS.OSVersionSimulator}";

  public static final class Clinical {
    public static final String Username = "${config.uat.iOS.Clinical.Username}";
    public static final String Password = "${config.uat.iOS.Clinical.Password}";
    public static final String FirstName = "${config.uat.iOS.Clinical.FirstName}";
    public static final String MiddleName = "${config.uat.iOS.Clinical.MiddleName}";
    public static final String LastName = "${config.uat.iOS.Clinical.LastName}";
  }

  public static final class Participant {
    public static final String Username = "${config.uat.iOS.Participant.Username}";
    public static final String Password = "${config.uat.iOS.Participant.Password}";
    public static final String FirstName = "${config.uat.iOS.Participant.FirstName}";
    public static final String MiddleName = "${config.uat.iOS.Participant.MiddleName}";
    public static final String LastName = "${config.uat.iOS.Participant.LastName}";
  }
}

  public static class App {
    public static final String Url = "${config.uat.App.Url}";
  }
}
}

""")
  }


}

compileTestJava.dependsOn generateConfig
